Package prolixa;

Helpers	
 letra_min = ['a'..'z'];
 letra_masc = ['A'..'Z'];
 digito = ['0' .. '9'];
 tab = 0x0009;
 any_char = [0 .. 0xffff];
 any_str = [0 .. 0xffff]-[0x27];
 espaco = ' ';
 ponto = '.';
 rc = 13;
 nl = 10;
 underline = '_';
 
Tokens
 this = 'This';
 is = 'is';
 program = 'program';
 let = 'Let';
 us = 'us';
 begin = 'begin';
 that_maiusculo = 'That';
 would = 'would';
 be = 'be';
 all = 'all';
 it = 'It';
 presents = 'presents';
 alterable = 'alterable';
 unalterable = 'unalterable';
 just = 'just';
 in = 'in';
 case = 'case';
 that_minusculo = 'that';
 as = 'as';
 long = 'long';
 considering = 'considering';
 number = 'number';
 answer = 'answer';
 answer_valores = ('yes' | 'no');
 symbol = 'symbol';
 vazio = (espaco | tab | rc | nl)+;
 identificador = letra_masc (letra_masc | letra_min | underline)*;
 vector = 'vector';
 from = 'from';
 to = 'to';
 by = 'by';
 do = 'do';
 of = 'of';
 otherwise = 'otherwise';
 go = 'go';
 next = 'next';
 iteration = 'iteration';
 capture = 'capture';
 show = 'show';
 abandon = 'abandon';
 abre_parenteses = '(';
 fecha_parenteses = ')';
 abre_colchetes = '[';
 fecha_colchetes = ']';
 numero = (digito+ | digito+ '.' digito+);
 intermedio_vetor = 'x';
 ponto_virgula = ';';
 virgula = ',';
 string = '"' (any_str)* '"';
 ponto_final = '.';
 dois_pontos = ':';
 comentario = '{' (any_char | nl | rc)* '}';
 barra_vertical = '|';

 
//operadores
 equal = '=';
 assign = ':=';
 not_equal = '!=';
 less_equal = '<=';
 greater_equal = '>=';
 less = '<';
 greater = '>';
 plus = '+';
 minus = '-';
 times = '*';
 divide = '/';
 and = 'and';
 or = 'or';
 xor = 'xor';
 not = '!';
 int_divide = '//';

Ignored Tokens
 comentario, vazio;
